<?xml version="1.0" encoding="UTF-8"?>
<project name="module_blockchain" default="compile.module.blockchain">
  <dirname property="module.blockchain.basedir" file="${ant.file.module_blockchain}"/>

  <property name="module.jdk.home.blockchain" value="${jdk.home.1.8_(1)}"/>
  <property name="module.jdk.bin.blockchain" value="${jdk.bin.1.8_(1)}"/>
  <property name="module.jdk.classpath.blockchain" value="jdk.classpath.1.8_(1)"/>

  <property name="compiler.args.blockchain" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>

  <property name="blockchain.output.dir" value="${module.blockchain.basedir}/out/production/Blockchain"/>
  <property name="blockchain.testoutput.dir" value="${module.blockchain.basedir}/out/test/Blockchain"/>

  <path id="blockchain.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>

  <path id="blockchain.module.production.classpath">
    <path refid="${module.jdk.classpath.blockchain}"/>
    <pathelement location="${basedir}/../../Downloads/javafx-0.2.jar"/>
  </path>

  <path id="blockchain.runtime.production.module.classpath">
    <pathelement location="${blockchain.output.dir}"/>
    <pathelement location="${basedir}/../../Downloads/javafx-0.2.jar"/>
  </path>

  <path id="blockchain.module.classpath">
    <path refid="${module.jdk.classpath.blockchain}"/>
    <pathelement location="${blockchain.output.dir}"/>
    <pathelement location="${basedir}/../../Downloads/javafx-0.2.jar"/>
  </path>

  <path id="blockchain.runtime.module.classpath">
    <pathelement location="${blockchain.testoutput.dir}"/>
    <pathelement location="${blockchain.output.dir}"/>
    <pathelement location="${basedir}/../../Downloads/javafx-0.2.jar"/>
  </path>


  <patternset id="excluded.from.module.blockchain">
    <patternset refid="ignored.files"/>
  </patternset>

  <patternset id="excluded.from.compilation.blockchain">
    <patternset refid="excluded.from.module.blockchain"/>
  </patternset>

  <path id="blockchain.module.sourcepath">
    <dirset dir="${module.blockchain.basedir}">
      <include name="src"/>
    </dirset>
  </path>


  <target name="compile.module.blockchain" depends="compile.module.blockchain.production,compile.module.blockchain.tests" description="Compile module Blockchain"/>

  <target name="compile.module.blockchain.production" depends="register.custom.compilers" description="Compile module Blockchain; production classes">
    <mkdir dir="${blockchain.output.dir}"/>
    <javac2 destdir="${blockchain.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.blockchain}/javac">
      <compilerarg line="${compiler.args.blockchain}"/>
      <bootclasspath refid="blockchain.module.bootclasspath"/>
      <classpath refid="blockchain.module.production.classpath"/>
      <src refid="blockchain.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.blockchain"/>
    </javac2>

    <copy todir="${blockchain.output.dir}">
      <fileset dir="${module.blockchain.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="compile.module.blockchain.tests" depends="register.custom.compilers,compile.module.blockchain.production" description="compile module Blockchain; test classes" unless="skip.tests"/>

  <target name="clean.module.blockchain" description="cleanup module">
    <delete dir="${blockchain.output.dir}"/>
    <delete dir="${blockchain.testoutput.dir}"/>
  </target>
</project>